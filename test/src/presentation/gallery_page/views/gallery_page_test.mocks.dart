// Mocks generated by Mockito 5.4.4 from annotations
// in astro_snap/test/src/presentation/gallery_page/views/gallery_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:astro_snap/src/domain/entities/apod_entry.dart' as _i4;
import 'package:astro_snap/src/domain/usecases/get_image_gallery_usecase.dart'
    as _i2;
import 'package:astro_snap/src/infrastructure/utils/connectivity_utils.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetImageGalleryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetImageGalleryUseCase extends _i1.Mock
    implements _i2.GetImageGalleryUseCase {
  MockGetImageGalleryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.APODEntry>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Future<List<_i4.APODEntry>>.value(<_i4.APODEntry>[]),
      ) as _i3.Future<List<_i4.APODEntry>>);
}

/// A class which mocks [ConnectivityUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityUtils extends _i1.Mock implements _i5.ConnectivityUtils {
  MockConnectivityUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> hasConnectivity() => (super.noSuchMethod(
        Invocation.method(
          #hasConnectivity,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
